name: Autoversioning workflow

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Generate Semantic Version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Importante para que GitVersion pueda calcular la versión correctamente

      - name: Install GitVersion
        uses: GitTools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'  # Última versión de GitVersion

      - name: Determine Version
        id: gitversion
        uses: GitTools/actions/gitversion/execute@v0

      - name: Show Generated Version
        run: |
          echo "Versión generada: ${{ steps.gitversion.outputs.fullSemVer }}"
      - name: Create Git Tag
        run: |
          git tag v${{ steps.gitversion.outputs.fullSemVer }}
          git push origin v${{ steps.gitversion.outputs.fullSemVer }}

      - name: Generar línea de changelog
        id: changelog
        run: |
          echo "### v${{ steps.gitversion.outputs.fullSemVer }}" >> new_changelog.md
          echo "" >> new_changelog.md
          git log >> new_changelog.md
          awk '{ buffer[NR%5] = $0 } /docs: Update CHANGELOG for v/ { exit } NR>4 { print buffer[(NR+1)%5] }' new_changelog.md >> filtered_changelog.md
          echo "" >> filtered_changelog.md
          echo "::set-output name=changelog::$(cat filtered_changelog.md)"
          cat CHANGELOG.md >> filtered_changelog.md
          mv filtered_changelog.md CHANGELOG.md
          rm new_changelog.md
          
      - name: Commit y push del changelog actualizado
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "docs: Update CHANGELOG for v${{ steps.gitversion.outputs.fullSemVer }}"
          git push origin main          

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.gitversion.outputs.fullSemVer }}
          name: Release v${{ steps.gitversion.outputs.fullSemVer }}
          body: |
            # CHANGELOG
            
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
